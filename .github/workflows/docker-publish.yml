name: build-and-push-dockerhub

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]
    paths:
      - Dockerfile
      - requirements.txt
      - install_custom_nodes.sh
      - entrypoint.sh
      - sync_hook.py
      - .dockerignore
      - .github/workflows/docker-publish.yml
  workflow_dispatch: {}

concurrency:
  group: docker-publish-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: comfyui-runpod
  BASE_TAG: cu126-py311-torch271
  REGISTRY: docker.io
  DOCKERHUB_NAMESPACE: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # Free up 10â€“30 GB on hosted runner
      - name: Free disk space on runner
        shell: bash
        run: |
          set -euxo pipefail
          echo "Before cleanup:"
          df -h
          sudo swapoff -a || true
          sudo rm -f /swapfile || true
          # Heavy SDKs/toolcache
          sudo rm -rf /usr/local/lib/android || true
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf /opt/ghc || true
          sudo rm -rf "$AGENT_TOOLSDIRECTORY" || true
          # Apt caches
          sudo apt-get clean || true
          # Docker cleanup (if any)
          docker system prune -af || true
          docker builder prune -af || true
          echo "After cleanup:"
          df -h

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Check secrets presence
        id: guard
        shell: bash
        run: |
          if [[ -n "${{ secrets.DOCKERHUB_USERNAME }}" && -n "${{ secrets.DOCKERHUB_TOKEN }}" ]]; then
            echo "have_secrets=true" >> $GITHUB_OUTPUT
          else
            echo "have_secrets=false" >> $GITHUB_OUTPUT
          fi

      - name: Login to Docker Hub
        if: steps.guard.outputs.have_secrets == 'true'
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata (tags/labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/comfyui-runpod
          flavor: |
            latest=true
          tags: |
            type=raw,value=cu126-py311-torch271
            type=sha,format=short,prefix=sha-
            type=ref,event=tag
            type=schedule,pattern={{date 'YYYYMMDD'}}
          labels: |
            org.opencontainers.image.title=ComfyUI GPU Runtime
            org.opencontainers.image.description=ComfyUI nightly + CUDA 12.6 + Python 3.11 + Torch 2.7.1/cu126 + sync hook
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.run_id }}

      - name: Build (and push if secrets exist)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: ${{ steps.guard.outputs.have_secrets == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false

      # Optional: prune after build to avoid hitting log/full errors near job end
      - name: Post-build docker prune
        if: always()
        run: |
          docker system prune -af || true
          docker builder prune -af || true
          df -h
