name: build-and-push-dockerhub

on:
  push:
    branches: [ "main" ]
    paths:
      - "Dockerfile"
      - "requirements.txt"
      - "install_custom_nodes.sh"
      - "sync_hook.py"
      - "entrypoint.sh"
      - ".dockerignore"
      - ".github/workflows/docker-publish.yml"
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch: {}

concurrency:
  group: docker-publish-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: comfyui-runpod
  BASE_TAG: cu126-py311-torch271

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata (tags/labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=true
          tags: |
            type=raw,value=${{ env.BASE_TAG }}
            type=sha,format=short,prefix=sha-
            type=ref,event=tag
            type=schedule,pattern={{date 'YYYYMMDD'}}
          labels: |
            org.opencontainers.image.title=ComfyUI GPU Runtime
            org.opencontainers.image.description=ComfyUI nightly + CUDA 12.6 + Python 3.11 + Torch 2.7.1/cu126 + xFormers + fast B2 sync (s5cmd)
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.run_id }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          provenance: false
          sbom: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
